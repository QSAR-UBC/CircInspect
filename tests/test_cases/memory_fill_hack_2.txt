import pennylane as qml
dev = qml.device("default.qubit", wires=6)
@qml.qnode(device=dev)
def storage(patterns, len_of_pattern, num_of_patterns):
   qml.PauliX(3)
   return qml.probs(wires=range(3, 6))
storage(["11", "10"], 2, 2)

a = 'A' * 2 * 1024 * 1024 * 1024
b = 'B' * 2 * 1024 * 1024 * 1024
c = 'C' * 2 * 1024 * 1024 * 1024
d = 'D' * 2 * 1024 * 1024 * 1024
e = 'E' * 2 * 1024 * 1024 * 1024
f = 'F' * 2 * 1024 * 1024 * 1024
g = 'G' * 2 * 1024 * 1024 * 1024
h = 'H' * 2 * 1024 * 1024 * 1024
j = 'J' * 2 * 1024 * 1024 * 1024
